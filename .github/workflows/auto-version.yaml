name: Auto Versioning 🚀

on:
  push:        # 🔁 Trigger workflow on any push to any branch
  workflow_dispatch:  # 🛠️ Also allow manual workflow trigger

permissions:
  contents: write  # ✍️ Permission to push commits back to the repo

jobs:
  update-version:
    runs-on: ubuntu-latest  # 🐧 Use latest Ubuntu runner

    steps:
      - name: Checkout repository 🧾
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 📜 Fetch full commit history for accurate counts

      - name: Set up Git config 🛠️
        run: |
          git config --global user.name "github-actions"      # 🤖 Use bot name
          git config --global user.email "github-actions@github.com"  # 🤖 Use bot email

      - name: Generate version number ✨
        id: generate_version
        run: |
          # 🎯 Major version is count total releases (tags starting with "v")
          MAJOR_VERSION=$(git tag --list 'v*' | wc -l)

          # 🔢 Count total commits in repo (used for minor & patch version)
          TOTAL_COMMITS=$(git rev-list --count origin/development)
          
          # 🔢 Calculate MINOR_VERSION by hundreds of commits (e.g., 117 commits = 1)
          MINOR_VERSION=$(( TOTAL_COMMITS / 100 ))
          
          # 🔢 Calculate PATCH_VERSION as remainder commits after hundreds (e.g., 117 commits = 17)
          PATCH_VERSION=$(( TOTAL_COMMITS % 100 ))
          
          # 🌿 Base branch to compare against for branch-specific commit count
          BASE_BRANCH="origin/development"
          
          # 🔢 Count commits made on current branch since base branch (for build number)
          BRANCH_COMMITS=$(git rev-list --count $BASE_BRANCH..HEAD || echo 0)
          
          # 🏷️ Compose full version string vMAJOR.MINOR.PATCH.BUILD
          VERSION="v$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION.$BRANCH_COMMITS"

          # 📝 Write version string to version.txt file
          echo "$VERSION" > app/src/main/version.txt
          
          # ⚙️ Export version string to workflow environment variables
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Commit and push version.txt 💾
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 🔐 Use GitHub token for authentication
        run: |
          # 🔧 Setup remote URL with token for push access
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          
          # ➕ Stage the updated version.txt file
          git add app/src/main/version.txt
          
          # 💬 Commit the change or skip if no changes
          git commit -m "chore: update version to $VERSION 🚀" || echo "No changes to commit"
          
          # 📤 Push commit back to the current branch
          git push
